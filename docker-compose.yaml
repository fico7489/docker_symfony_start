name: ${DOCKER_PROJECT_NAME}

services:

  php:
    container_name: ${DOCKER_PROJECT_NAME}_php
    user: ${UID:-1000}:${GID:-1000}
    build: ./.docker/php
    volumes:
      - ./:/var/www/html

  nginx:
    container_name: ${DOCKER_PROJECT_NAME}_nginx
    build: ./.docker/nginx
    ports:
      - '${DOCKER_FORWARDED_80_PORT}:80'
    volumes:
      - ./:/var/www/html
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf

  mysql:
    container_name: ${DOCKER_PROJECT_NAME}_mysql
    build: ./.docker/mysql
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_ROOT_HOST=%"
    volumes:
      - ./:/app
      - db-data:/var/lib/mysql
    ports:
      - "33320:3306"

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  db-data:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
